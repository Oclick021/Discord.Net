// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PubgStatsDiscordBot.Helpers;

namespace PubgStatsDiscordBot.Migrations
{
    [DbContext(typeof(PubgDbContext))]
    [Migration("20190824101537_player")]
    partial class player
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("PubgStatsDiscordBot.Models.Player", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CurrentSeasionLastUpdate");

                    b.Property<string>("DuoStatsID");

                    b.Property<string>("Name");

                    b.Property<string>("SoloStatsID");

                    b.Property<string>("SquadStatsID");

                    b.HasKey("Id");

                    b.HasIndex("DuoStatsID");

                    b.HasIndex("SoloStatsID");

                    b.HasIndex("SquadStatsID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("PubgStatsDiscordBot.Models.SeasonStats", b =>
                {
                    b.Property<string>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Assists");

                    b.Property<float>("BestRankPoint");

                    b.Property<int>("DailyKills");

                    b.Property<int>("DailyWins");

                    b.Property<float>("DamageDealt");

                    b.Property<int>("HeadshotKills");

                    b.Property<int>("Kills");

                    b.Property<float>("LongestKill");

                    b.Property<int>("Losses");

                    b.Property<int>("MaxKillStreaks");

                    b.Property<float>("RankPoints");

                    b.Property<int>("RoundsPlayed");

                    b.Property<int>("Top10s");

                    b.Property<int>("WeeklyKills");

                    b.Property<int>("WeeklyWins");

                    b.Property<int>("Wins");

                    b.HasKey("ID");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("PubgStatsDiscordBot.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DiscordName");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PubgStatsDiscordBot.Models.Player", b =>
                {
                    b.HasOne("PubgStatsDiscordBot.Models.SeasonStats", "DuoStats")
                        .WithMany()
                        .HasForeignKey("DuoStatsID");

                    b.HasOne("PubgStatsDiscordBot.Models.SeasonStats", "SoloStats")
                        .WithMany()
                        .HasForeignKey("SoloStatsID");

                    b.HasOne("PubgStatsDiscordBot.Models.SeasonStats", "SquadStats")
                        .WithMany()
                        .HasForeignKey("SquadStatsID");
                });
#pragma warning restore 612, 618
        }
    }
}
